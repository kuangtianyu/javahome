## **3.31 整型**

- java中有四种整型：
  - 类型                存储需求                                                        取值范围
  - int                     4字节                                       -2147 483 648  ~  2147 483 647
  - short                2字节                                       -32 768  ~  32 767
  - long                  8字节                                       -9 223 372 036 854 775 808  ~  9 223 372 036 854 775 807
  - byte                  1字节                                       -128  ~  127
- 在java中，整型的范围与运行java代码的机器无关，可以在不同操作系统之间进行移植，所有的数值类型所占据的字节数与平台无关。注意：java没有任何无符号(unsigned) 形式的 int, long, short, 或 byte类型
- 长整型数值有一个后缀L或l。十六进制有一个前缀0x或0X。八进制有一个前缀0



## 3.32 浮点类型


| 类型   | 存储需求 | 取值范围                                              |
| ------ | -------- | ----------------------------------------------------- |
| float  | 4字节    | 大约+(-)3.402 823 47E+38F(有效位数为6 ~ 7位)          |
| double | 8字节    | 大约+(-)1.797 693 134 862 315 70E+308(有效位数为15位) |

- double表示这种类型的数值精度是float类型的两倍，float很少情况下使用：需要单精度数的库，或者需要储存大量数据时。

- 所有的浮点数值计算都遵循IEEE 754规范。下面是用于表示溢出和出错的情况的三个特点的浮点数值：

  - 正无穷大

  - 负无穷大

  - NaN（不是数字的数字)

    例如：一个正整数除以0的结果为正无穷大。计算0/0或者负数的平方根结果为NaN.



## 3.33 char类型

- char类型的字面量值要用单引号括起来

- ​                                                                            特殊字符的转义序列

  | 转义序列 | 名称 | Unicode值 | 转义序列 | 名称   | Unicode |
  | -------- | ---- | --------- | -------- | ------ | ------- |
  | \b       | 退格 | \u0008    | \"       | 双引号 | \u0022  |
  | \t       | 制表 | \u0009    | \ '      | 单引号 | \u0027  |
  | \n       | 换行 | \u000a    | \\ \     | 反斜杠 | \u005c  |
  | \r       | 回车 | \u000d    |          |        |         |
  
  ## 3.34 boolean
  - Boolean（布尔）类型有两个值：false 和 true，用来判断逻辑条件。整型值和布尔值之间不能就那些相互转换
